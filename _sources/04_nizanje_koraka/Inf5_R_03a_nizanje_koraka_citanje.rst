
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
4.1. Низање корака
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. topic:: У оквиру овог часа вежбаћеш:            
          
            - Прављење скрипти у којима се кораци само нижу један за другим
            - Препознавање начина употребе блока по његовом облику
            - Усклађивање скрипти различитих ликова по времену помоћу чекања


.. |zelena_zastavica|  image:: ../../_images/S3_opste/zelena_zastavica.png
.. |idi_xy|            image:: ../../_images/S3_opste/idi_xy.png
.. |klizi_xy|          image:: ../../_images/S3_opste/klizi_xy.png
.. |cekaj|             image:: ../../_images/S3_opste/cekaj.png
.. |dirka|             image:: ../../_images/S3_opste/dirka.png
.. |prikazi|           image:: ../../_images/S3_opste/prikazi.png
.. |sakrij|            image:: ../../_images/S3_opste/sakrij.png

.. |usmeri_objektu|    image:: ../../_images/S3_opste/usmeri_objektu.png
.. |nacin_okretanja|   image:: ../../_images/S3_opste/nacin_okretanja.png
.. |izgovori_sec|      image:: ../../_images/S3_opste/izgovori_sec.png

.. |mesto_x|           image:: ../../_images/S3_opste/mesto_x.png
.. |mesto_y|           image:: ../../_images/S3_opste/mesto_y.png
.. |smer|              image:: ../../_images/S3_opste/smer.png

.. |lopta|             image:: ../../_images/S3_04_nizanje_koraka/lopta.jpg



У многим скриптама блокови се само стављају један испод другог. При томе сваки блок представља један корак у алгоритму, а алгоритам се извршава тако што се кораци просто извршавају редом, један за другим (нема прескакања, нити враћања на већ извршене блокове). Зато се ова лекција зове **низање корака**, а алгоритми које ћемо да програмирамо се зову **алгоритми линијске структуре**.

Примери
-------

Пројекти у наредним примерима имају скрипте са простом линијском структуром.
 
Први пројекат је игрица која омогућава кориснику да води бубу кроз лавиринт помоћу стрелица на тастатури до излаза.

Други пројекат представља симулацију одскакања лопте која пада са висине на подлогу.

Трећи пројекат илуструје како се могу ускладити понашања различитих ликова у програму.

Пример 1 - Лавиринт
'''''''''''''''''''

Како ради програм Лавиринт можеш видети ако кликнеш на следећу слику. Бубу треба да одведеш до излаза користећи стрелице на тастатури. Испробај колико брзо можеш да изведеш бубу из лавиринта без варања (стајања на љубичаста поља)?


.. raw:: html

   <div style="text-align: center">
   <iframe src="https://scratch.mit.edu/projects/416416223/embed" allowtransparency="true" width="485" height="402" frameborder="0" scrolling="no"  allowfullscreen>
   </iframe>
   </div>


Покушај да креираш ову игру пратећи следеће упутство.

.. reveal:: zadatak_sakrivanje_lavirint
    :showtitle: Упутство
    :hidetitle: Сакриј упутство

        Лавиринт ћеш најлакше направити ако из галерије позадина изабереш позадину "Xy-grid-30px", коју ћеш затим прилагодити. Ова позадина садржи квадратну мрежу (енгл. *grid*), у којој је сваки квадрат величине 30 корака.

    .. image:: ../../_images/S3_04_nizanje_koraka/lavirint_pozadina.jpg
        :align: center
        :width: 400

    Када изабереш ову позадину, кликни на њу у листи (корак 1 на слици), а затим кликни на картицу "Позадине" (корак 2 на слици).

    .. image:: ../../_images/S3_04_nizanje_koraka/lavirint_pravljenje.jpg
        :align: center
        :width: 600

    |

    Унутар картице "Позадине" имамо могућност да уређујемо и преправљамо позадину, слично као у програму "Бојанка" (*Paint*). Изабери кантицу (корак 3 на претходној слици) и обој нека поља по жељи, тако да добијеш лавиринт.

    На сличан начин можеш да преправљаш и изглед ликова, треба само да кликнеш на лик у листи ликова, тако да он постане активан, а затим на картицу. Када мењамо изглед лика, картица се не зове "Позадине" него "Костими", јер позорница има позадине, а лик костиме.

    |

    Прелазимо на ликове. Једини лик у пројекту је буба. Додај је у пројекат, промени јој име (1), подеси јој величину тако да може да стане у једно поље лавиринта (2) и постави је на почетно место (3).

    .. image:: ../../_images/S3_04_nizanje_koraka/lavirint_lik.png
        :align: center
        :width: 500

    |

    Остаје још да испрограмирамо бубу. Када програм почне, желимо да се буба врати на почетну позицију и окрене у одговарајућем смеру (у нашем лавирину то је на горе). Осим тога, на притисак сваке од стрелица на тастатури (горе, доле, лево, десно), буба треба да се окрене у одговрарајућем смеру и помери се 30 корака, јер је толика величина поља. То значи да ћемо за бубу имати 5 малих скрипти - једну за почетак програма и четири за стрелице (по једну за сваку стрелицу). 

    Ево како скрипте изгледају у нашем примеру лавиринта:

    .. image:: ../../_images/S3_04_nizanje_koraka/lavirint_skripte.png
        :align: center
        :width: 600

    Блок |dirka| се, као и |zelena_zastavica|, налази у групи "Догађаји", што препознајемо и по боји блока.

    Направи приказане скрипте и испробај свој програм. 

.. infonote::

    **Запамти**: сваки лик може да има неограничен број скрипти. У примеру "Лавиринт" оне се стартују на различите начине, али лик може да има и више скрипти које се стартују на исти начин, на пример две скрипте које се обе стартују кликом на зелену заставицу.


Пример 2 - Одскакање лопте
''''''''''''''''''''''''''

У овом пројекту ћемо приказати лопту која полази из неке тачке високо на позорници, затим неколико пута пада и одскаче. Кликом на следећу слику можеш да видиш како одговарајући програм ради.

.. raw:: html

   <div style="text-align: center">
   <iframe src="https://scratch.mit.edu/projects/344940342/embed" allowtransparency="true" width="485" height="402" frameborder="0" scrolling="no"  allowfullscreen>
   </iframe>
   </div>


Покушај да креираш ову симулацију пратећи следеће упутство.


.. reveal:: zadatak_sakrivanje_odskakanje_lopte
    :showtitle: Упутство
    :hidetitle: Сакриј упутство

        Из галерије ликова искористићемо лик |lopta|, а као позорницу ћемо одабрати кошаркашко игралиште.

    Скрипту, наравно, започињемо блоком |zelena_zastavica|. Први корак је да поставимо лопту на почетно место, а за то ћемо употребити блок |idi_xy|. У наставку нам је довољно само још неколико блокова |klizi_xy|, који ће померати лопту доле-горе. Битно је да ових блокова буде непаран број, на пример 7, јер лопта треба да заврши доле.

    Знамо да је лопта која одскаче нешто бржа доле, а спорија горе. Да би наша анимација мало више личила на стварност, можемо да убацимо по један блок |cekaj| сваки пут када је лопта горе. Према томе, скрипта има овај облик:

    .. image:: ../../_images/S3_04_nizanje_koraka/lopta_odskace_skripta_bez_brojeva.png
        :align: center
        :width: 240

    Теби остаје да упишеш вредности координата и трајање клизања и чекања. Пре него што то урадиш, подсети се како се мењају координате при кретању по позорници:


    .. mchoice:: odskakanje_dole
       :answer_a: Y се повећава а X се не мења.
       :answer_b: Y се смањује а X се не мења.
       :answer_c: X се повећава а Y се не мења.
       :answer_d: X се смањује а Y се не мења.
       :feedback_a: Лопта која пада иде ка дну позорнице. Да ли су Y координате при дну позорнице мање или веће? Размисли и покушај да исправиш одговор.
       :feedback_b: Тако је!
       :feedback_c: Која координата се мења ако се лик креће на доле? Размисли и покушај да исправиш одговор.
       :feedback_d: Која координата се мења ако се лик креће на доле? Размисли и покушај да исправиш одговор.
       :correct: b

   Како се мењају координате лопте која пада?

    .. mchoice:: odskakanje_gore
       :answer_a: Y се повећава а X се не мења.
       :answer_b: Y се смањује а X се не мења.
       :answer_c: X се повећава а Y се не мења.
       :answer_d: X се смањује а Y се не мења.
       :feedback_a: Тако је!
       :feedback_b: Лопта иде у вис, тј. ка врху позорнице. Да ли су Y координате при врху позорнице мање или веће? Размисли и покушај да исправиш одговор.
       :feedback_c: Која координата се мења ако се лик креће на горе? Размисли и покушај да исправиш одговор.
       :feedback_d: Која координата се мења ако се лик креће на горе? Размисли и покушај да исправиш одговор.
       :correct: a

   Како се мењају координате лопте након што се она одбије од земље?

    Сада, када знаш коју координату да мењаш, а коју не, треба мало да експериментишеш. Слободно покушавај више пута и постепено поправљај бројеве (савет: користи тастер *Tab*). Овде не постоји једно тачно решење - свако решење које личи на одбијање праве лопте од пода је добро. Зато не жури да погледаш наше решење.

.. reveal:: zadatak_sakrivanje_lopta_odskace
    :showtitle: Упореди своје решење са нашим
    :hidetitle: Сакриј решење

    **Могуће решење**
 
    .. image:: ../../_images/S3_04_nizanje_koraka/lopta_odskace_skripta.png
        :align: center
        :width: 360



|

Пример 3 - Ужина
''''''''''''''''

Девојчица Авери је огладнела и размишља шта да поједе. Кликом на слику можеш да видиш о којој храни Авери размишља.

.. raw:: html

   <div style="text-align: center">
   <iframe src="https://scratch.mit.edu/projects/416417987/embed" allowtransparency="true" width="485" height="402" frameborder="0" scrolling="no"  allowfullscreen>
   </iframe>
   </div>

Покушај да креираш овај пројекат пратећи следеће упутство.

.. reveal:: zadatak_sakrivanje_uzina
    :showtitle: Упутство
    :hidetitle: Сакриј упутство

    У пројекту се појављују следећи ликови:

    .. image:: ../../_images/S3_04_nizanje_koraka/uzina_likovi.png
        :align: center
        :width: 400

    Ово је скрипта девојчице Авери:

    .. image:: ../../_images/S3_04_nizanje_koraka/uzina_skripta_avery.png
        :align: center
        :width: 500

    Ликови хране треба да се виде док Авери размишља о њима, а остало време да буду сакривени. Сваки од три лика хране треба да извршава ову скрипту, али са различитим бројевима:

    .. image:: ../../_images/S3_04_nizanje_koraka/uzina_skripta_vocke_bez_brojeva.png
        :align: center
        :width: 300

    Блокови |prikazi| и |sakrij| се налазе у групи "Изглед" (што се види и по боји ових блокова). Можеш да олакшаш себи посао тако што саставиш скрипту (са било којим бројевима) за један лик, а затим је превучеш до остала два лика у листи ликова. Препознаћеш да је скрипта копирана у други лик по томе што се лик у листи ликова мало затресе. После копирања треба за сваки лик уписати одговарајуће бројеве у скрипту.

    Изабери положаје ликова хране и одреди колико сваки од ових ликова треба да чека пре него што се појави, а колико дуго треба да чека док је приказан. Сва времена се могу израчунати, али ако не успеш да упишеш права времена у првом покушају, размисли и поправи их, по потреби и више пута (труди се да не нагађаш). Када завршиш, можеш да погледаш и наше решење.

.. reveal:: zadatak_sakrivanje_kod
    :showtitle: Упореди своје решење са нашим
    :hidetitle: Сакриј решење

    **Могуће решење**
 
    Поред сваке скрипте је лик одговарајуће хране.
    
    .. image:: ../../_images/S3_04_nizanje_koraka/uzina_skripte_vocke.png
        :align: center
        :width: 600



|

Дошло је време да систематизујемо знање о блоковима који су коришћени у досадашњим примерима. 

У Скречу постоји неколико врста блокова, који се разликују по боји и облику. Занемари за тренутак боје блокова и обрати пажњу на облике, јер по облику блока може да се препозна начин његовог коришћења.

.. infonote::

    **Врсте блокова по начину коришћења**
    
    Све блокове који постоје у Скречу можемо да разврстамо у самосталне и функцијске блокове. **Самостални блокови** представљају наредбе језика, односно кораке алгоритма. Неки од тих блокова имају поља у која се може поставити вредност. **Функцијски блокови** представљају вредности. Они не могу да стоје сами у скрипти, већ се умећу у поља блокова који примају вредности. На тај начин  функцијски блокови прецизирају начин извршавања других блокова.

    .. image:: ../../_images/S3_04_nizanje_koraka/blokovi.jpg
        :align: center
        :width: 600

    Међу самосталним блоковима разликујемо ове подврсте:
    
    (1) **Почетни блокови** говоре који догађај покреће скрипту. Тај догађај може да буде, на пример, клик на зелену заставицу изнад позорнице или притисак на неку дирку тастатуре. Ови блокови се налазе у групи блокова *Догађаји* и свака скрипта мора да почне једним оваквим блоком. 

    (2) **Завршни блокови** не морају да се користе у скриптама. Завршни блок ће ти бити потребан само ако у неком тренутку желиш да зауставиш све скрипте једног лика, или све скрипте свих ликова. Ови блокови се налазе у групи блокова *Управљање*.

    (3) **Блокови акције** говоре шта треба урадити. Овакви блокови се нижу један испод другог и извршавају редом. Овакви су, на пример, блокови |idi_xy|, |cekaj|, |prikazi|, а разврстани су у различите групе, зависно од врсте акције.
   
    (4) **Управљачки блокови** задају редослед извршавања других блокова. Овакви блокови служе да понове извршавање неке групе блокова потребан број пута, или да задају под којим условом треба извршити неку групу блокова. Ови блокови се налазе у групи блокова *Управљање* и њима ћемо се бавити у лекцијама о понављању и гранању и касније.
    
    Постоје и две подврсте функцијских блокова:

    (5) **Блокови репортери** нам саопштавају колика је нека вредност. Неке овакве блокове (|mesto_x|, |mesto_y|, |smer|) смо већ упознали, а ускоро ћемо их упознати још.

    (6) **Логички блокови** нам саопштавају да ли је нешто тачно или нетачно. О њима ћемо научити више у лекцијама о понављању и гранању.

    Облик блокова не служи само да можемо да препознамо начин употребе. Испупчења и удубљења на самосталним блоковима показују који блокови могу да се надовезују, а који не. Исто тако, облик функцијских блокова показује у која поља самосталних блокова они могу да се убаце. Омогућено је повезивање само оних блокова за које то има смисла (Скреч нам неће дозволити да повезујемо блокове на начин који нема смисла). 


.. topic:: Погледај видео:

   У овом видеу видећеш како да научиш ликове да скоче. Такође, научићеш како можеш да синхронизујеш кретање ликова. 

    .. ytpopup:: kHAfrc8ot3Q
        :width: 735
        :height: 415
        :align: center 



.. Пројекти за самосталан рад
   --------------------------

  Разговор
  ''''''''

  Направи пројекат у коме неколико ликова разговара (тема разговора и дијалози нека буду твој избор).

  Поред блока |zelena_zastavica|, користи и блокове |izgovori_sec| и |cekaj|, а ако желиш можеш да употребиш и блокове |usmeri_objektu| и |nacin_okretanja|.

  Скрипте појединих ликова треба да буду синхронизоване, слично као у пројекту *Ужина* - док један лик говори, остали чекају исто толико времена.


  Моји пријатељи
  ''''''''''''''

  Направи пројекат у коме један, главни лик представља остале. Сваки од осталих ликова се појављује само док главни лик говори о њему. Поред блокова поменутих у пројекту *Разговор*, требаће ти и блокови |prikazi| и |sakrij|.
                                                                    

Додатак
-------

Ако желиш, погледај `поглавље Низање корака <https://petlja.org/biblioteka/r/lekcije/scratch3-praktikum/scratch3-nizanje-koraka>`_ у Петљином практикуму. Тамо можеш да нађеш још нека објашњења и занимљиве пројекте.

Петљин `студио Низање корака <https://scratch.mit.edu/studios/24051841/>`_ на сајту Скреча садржи урађене пројекте за задатке сличне оним којима смо се овде бавили.
